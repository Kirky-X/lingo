Index: CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n\r\n### Added\r\n- Initial project structure\r\n- Core configuration management functionality\r\n- Support for multiple configuration sources (files, environment variables, command line)\r\n- Intelligent priority system for configuration loading\r\n- Procedural macro-driven configuration derivation\r\n- Type-safe configuration handling\r\n- Deep integration with Clap for command-line argument parsing\r\n- Support for nested structures\r\n- Configuration template generation\r\n- Asynchronous support\r\n- Cross-platform compatibility\r\n\r\n### Changed\r\n- Updated dependency versions in Cargo.toml\r\n- Enhanced error handling and reporting\r\n- Improved documentation and examples\r\n\r\n### Fixed\r\n- Compilation issues with updated dependencies\r\n- Type safety improvements\r\n- Memory safety enhancements\r\n\r\n## [0.1.0] - 2025-06-11\r\n\r\n### Added\r\n- Initial release of lingo configuration management library\r\n- Basic configuration loading from TOML files\r\n- Environment variable support\r\n- Command-line argument integration\r\n- Derive macro for automatic configuration struct generation\r\n- Configuration validation\r\n- Error handling with detailed error messages\r\n- Documentation and usage examples\r\n\r\n### Features\r\n- **Multi-source Configuration Loading**: Load from files, environment variables, and command-line arguments\r\n- **Intelligent Priority System**: Automatic precedence handling across configuration sources\r\n- **Procedural Macro Driven**: Derive-based configuration with minimal boilerplate\r\n- **Type Safety**: Compile-time guarantees for configuration correctness\r\n- **Deep Clap Integration**: Seamless command-line argument parsing\r\n- **Nested Structures**: Support for complex configuration hierarchies\r\n- **Template Generation**: Automatic configuration file template creation\r\n- **Async Support**: Full compatibility with async/await patterns\r\n- **Cross-platform**: Works on Windows, macOS, and Linux\r\n\r\n### Dependencies\r\n- figment = \"0.10.19\"\r\n- clap = { version = \"4.5.21\", features = [\"derive\"] }\r\n- thiserror = \"2.0.3\"\r\n- log = \"0.4.22\"\r\n- tracing = \"0.1.41\"\r\n- tokio = { version = \"1.41.1\", features = [\"full\"] }\r\n- directories = \"5.0.1\"\r\n- lingo-derive = { path = \"./lingo-derive\", version = \"0.1.0\" }\r\n\r\n### Examples\r\n- Basic configuration example\r\n- Database configuration with connection pooling\r\n- Web server configuration with HTTP settings\r\n\r\n### Documentation\r\n- Comprehensive README with usage examples\r\n- API documentation\r\n- Configuration guide\r\n- Best practices documentation\r\n\r\n---\r\n\r\n## Release Notes\r\n\r\n### Version 0.1.0\r\nThis is the initial release of the lingo configuration management library. It provides a robust, type-safe, and flexible solution for managing application configuration in Rust projects.\r\n\r\n**Key Highlights:**\r\n- Zero-configuration setup with sensible defaults\r\n- Automatic configuration merging from multiple sources\r\n- Compile-time validation of configuration structures\r\n- Rich error reporting for configuration issues\r\n- Extensive documentation and examples\r\n\r\n**Getting Started:**\r\n```toml\r\n[dependencies]\r\nlingo = \"0.1.0\"\r\n```\r\n\r\n**Basic Usage:**\r\n```rust\r\nuse lingo::Config;\r\n\r\n#[derive(Config)]\r\nstruct AppConfig {\r\n    name: String,\r\n    port: u16,\r\n    debug: bool,\r\n}\r\n\r\nfn main() {\r\n    let config = AppConfig::load().unwrap();\r\n    println!(\"Starting {} on port {}\", config.name, config.port);\r\n}\r\n```\r\n\r\nFor more examples and detailed documentation, please refer to the README.md file and the examples directory.
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CHANGELOG.md b/CHANGELOG.md
--- a/CHANGELOG.md	(revision f0e4dae52836332d4ecca60345bb3a2c8dbd54b6)
+++ b/CHANGELOG.md	(date 1749626944563)
@@ -2,80 +2,6 @@
 
 All notable changes to this project will be documented in this file.
 
-The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
-and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
-
-## [Unreleased]
-
-### Added
-- Initial project structure
-- Core configuration management functionality
-- Support for multiple configuration sources (files, environment variables, command line)
-- Intelligent priority system for configuration loading
-- Procedural macro-driven configuration derivation
-- Type-safe configuration handling
-- Deep integration with Clap for command-line argument parsing
-- Support for nested structures
-- Configuration template generation
-- Asynchronous support
-- Cross-platform compatibility
-
-### Changed
-- Updated dependency versions in Cargo.toml
-- Enhanced error handling and reporting
-- Improved documentation and examples
-
-### Fixed
-- Compilation issues with updated dependencies
-- Type safety improvements
-- Memory safety enhancements
-
-## [0.1.0] - 2025-06-11
-
-### Added
-- Initial release of lingo configuration management library
-- Basic configuration loading from TOML files
-- Environment variable support
-- Command-line argument integration
-- Derive macro for automatic configuration struct generation
-- Configuration validation
-- Error handling with detailed error messages
-- Documentation and usage examples
-
-### Features
-- **Multi-source Configuration Loading**: Load from files, environment variables, and command-line arguments
-- **Intelligent Priority System**: Automatic precedence handling across configuration sources
-- **Procedural Macro Driven**: Derive-based configuration with minimal boilerplate
-- **Type Safety**: Compile-time guarantees for configuration correctness
-- **Deep Clap Integration**: Seamless command-line argument parsing
-- **Nested Structures**: Support for complex configuration hierarchies
-- **Template Generation**: Automatic configuration file template creation
-- **Async Support**: Full compatibility with async/await patterns
-- **Cross-platform**: Works on Windows, macOS, and Linux
-
-### Dependencies
-- figment = "0.10.19"
-- clap = { version = "4.5.21", features = ["derive"] }
-- thiserror = "2.0.3"
-- log = "0.4.22"
-- tracing = "0.1.41"
-- tokio = { version = "1.41.1", features = ["full"] }
-- directories = "5.0.1"
-- lingo-derive = { path = "./lingo-derive", version = "0.1.0" }
-
-### Examples
-- Basic configuration example
-- Database configuration with connection pooling
-- Web server configuration with HTTP settings
-
-### Documentation
-- Comprehensive README with usage examples
-- API documentation
-- Configuration guide
-- Best practices documentation
-
----
-
 ## Release Notes
 
 ### Version 0.1.0
@@ -111,4 +37,4 @@
 }
 ```
 
-For more examples and detailed documentation, please refer to the README.md file and the examples directory.
\ No newline at end of file
+For more examples and detailed documentation, please refer to the README.md file and the examples directory.
